buildscript {
	repositories {
		maven { url "http://repo.spring.io/libs-snapshot" }
		maven { url "http://repo.spring.io/libs-milestone" }
		maven { url "http://repo.spring.io/libs-plugin-release" }
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.1.RELEASE")
	}
}
ext {
	junitVersion = '4.11'
	springVersion = '4.0.3.RELEASE'
	springIntegrationVersion = '4.0.0.M4'
	slf4jVersion = '1.7.6'
	log4jVersion = '1.2.17'
	springDataGemfireVersion = '1.3.2.RELEASE'
	jacksonVersion = '2.3.1'
	springXdVersion ='1.0.0.M6'
	springBootVersion = '1.0.1.RELEASE'
	springSocialVersion = "1.1.0.M4"
}

allprojects {
	apply plugin:'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'base'
	group = 'org.springframework.xd.demo.gemfire'
	repositories{
		mavenCentral()
		maven { url 'http://repo.spring.io/libs-milestone' }
		maven { url 'http://repo.spring.io/libs-snapshot' }
		maven { url 'http://repo.spring.io/plugins-release' }
		maven { url 'http://repo.spring.io/plugins-snapshot' }
	}
	sourceCompatibility=1.6
	targetCompatibility=1.6
	
}

dependencies {
	testCompile "junit:junit:$junitVersion"
	testCompile "org.springframework:spring-test:$springVersion"
}

project('hashtag-rest') {
	apply plugin: 'application'
	apply plugin: 'spring-boot'
	mainClassName = 'org.springframework.xd.demo.gemfire.Application'
	
	// Create the executable jar and exclude some certificates
	jar {
		manifest {
			attributes "Implementation-Title": "Hashtag Service"
			attributes "Implementation-Version": '1.0'
			attributes "Main-Class" : mainClassName
		}
	}
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
		compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
		compile project(':hashtag-analyzer')
	}
}

project ('hashtag-analyzer') {
	dependencies {
		compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
		compile ("org.springframework.data:spring-data-gemfire:$springDataGemfireVersion") {
			exclude group: 'org.springframework'
		}
		compile "org.springframework:spring-beans:$springVersion"
		compile "org.springframework:spring-context:$springVersion"
		compile "org.springframework:spring-tx:$springVersion"
		compile ("org.springframework.integration:spring-integration-core:$springIntegrationVersion") 
		compile ("org.springframework.xd:spring-xd-tuple:$springXdVersion") 
		
		compile ("org.springframework.social:spring-social-twitter:$springSocialVersion") {
			exclude group: 'org.springframework'
		}

		testCompile "junit:junit:$junitVersion"
		testCompile "org.springframework:spring-test:$springVersion"
		testRuntime ("org.springframework.integration:spring-integration-file:$springIntegrationVersion")
		testRuntime ("org.springframework.integration:spring-integration-groovy:$springIntegrationVersion")
		testRuntime 'joda-time:joda-time:2.3'
		compile ("org.springframework.xd:spring-xd-dirt:$springXdVersion"){
			transitive = false
		}
		runtime "org.springframework:spring-context:$springVersion"
		runtime "org.springframework:spring-tx:$springVersion"
		runtime "org.springframework:spring-aop:$springVersion"
		runtime "org.springframework:spring-expression:$springVersion"
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.11'
}
